---
title: "Class 5: Data Visualization with ggplot"
author: "Allen (PID: A16897142)"
format: pdf
toc: true
---

# Background

There are many graphics systems available in R. These include "base" R and tons of add on packages like **ggplot2**

Let's compare "base" and **ggplot2** briefly. We can use some example data that is built-in with R called `cars`:

```{r}
head(cars)
```

I can just call `plot()` in base R.

```{r}
plot(cars)
```

We can now make it pretty and we do this with ggplot! **ggplot2**

First we install ggplot. We do this with the code `install.packages("ggplot2")`. This only need to do this once and then it will be available on my computer any time I need to access ggplot.

> Key Point: Packages can only be installed in the R console. Do not do it in quarto docs or R scripts.

To use any add-on packages you have installed, you need to load it up with `library ()`

```{r}
library(ggplot2)
ggplot(cars)
```

Every ggplot needs three different layers to make it show up:

- the **data** (and in our case it is `cars`)
- the **aes**thetics (how the data looks when mapped on the plot. Such as color and axis titles)
- the **geom**etry(what the lines/plots/data is drawn on the plot such as line width)

```{r}
ggplot(cars) + 
  aes(x=speed, y=dist)
```

```{r}
ggplot(cars) + 
  aes(x=speed, y=dist) +
  geom_point()
```

For more "simpler" plots, ggplot requires more words/code than base R. However, the defaults in ggplot are nicer and it is more efficient for complicated plots.

>Try adding a line to show the relationship between speed and stopping distance. Tip: by adding another layer

```{r}
ggplot(cars) + 
  aes(x=speed, y=dist) +
  geom_point()+
  geom_smooth()
```
```{r}
p <- ggplot(cars) + 
  aes(x=speed, y=dist) +
  geom_point()+
  geom_smooth(se=FALSE,method="lm")
```
I can save an object from ggplot for future use using x <- x

>Try adding axis titles

```{r}
p + labs(
   title="speed vs. distance",
   subtitle="cars that have a faster speed have a faster stopping distance",
   x="speed (mph)",
   y="stopping distance (feet)"
 )+
  theme_bw()
```

# Gene expression plot

Read input data

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```
> How many genes are in this dataset? How many columns and what are their names?

```{r}
nrow(genes)
ncol(genes)
colnames(genes)
```
> How many "up" and "down" regulated genes are there?

```{r}
table( genes$State )
```

## Custom Color Plot

> Make a plot with the data

```{r}
ggplot(genes)+
  aes(x=Condition1, y=Condition2, col=State)+
  scale_color_manual(
    values=c("firebrick","tomato","maroon")
  )+
  geom_point()+
  labs(title="Changes of gene expression based on drug treatments", x="Control (no drug)", y="Drug Treated")
```
## Using Different Geoms

This will be plotted using the built-in `mtcars` dataset

```{r}
head(mtcars)
```

> Scatterplot of `mpg` vs `disp`

```{r}
p1 <- ggplot(mtcars)+
  aes(x=disp,y=mpg)+
  geom_point() +
  labs(title="Miles per Gallon versus Displacement",
        x="Displacement (feet)",
        y="Miles per Gallon")
```

> Boxplot of `gear` vs `disp`

```{r}
p2 <- ggplot(mtcars)+
  aes(gear, disp,group=gear)+
  geom_boxplot()+
  labs (title="Gear vs Displacement",
        x="gear",
        y="displacement(feet)")
```

> Barplot of `carb`

```{r}
p3 <- ggplot(mtcars)+
  aes(carb)+
  geom_bar()+
  labs (title="Carbon Output of Cars",
        x="carbon output",
        y="units")
```

> Smooth of `disp` vs `qsec`

```{r}
p4 <- ggplot(mtcars)+
  aes(disp, qsec)+
  geom_smooth()+
  labs (title="Displacement vs Qsec",
        x="Displacement",
        y="qsec")
```

I want to now combine all of these plots into one figure with a panel!

Use the code **library(patchwork)** to get this.

```{r}
library(patchwork)

(p1 | p2) /
      (p3 | p4)
```
```{r}
ggsave(filename="allmyplots.png", width=10, height=10)
```

# More Aesthetic Features!

```{r}
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"

gapminder <- read.delim(url)
```

To just see the table
```{r}
head(gapminder)
```

> How many countries are in this dataset?

```{r}
length(table(gapminder$country))
```

> Plot GDP vs Life Expectancy and color by continent

```{r}
ggplot(gapminder)+
  aes(x=gdpPercap, y=lifeExp, col=continent)+
  geom_point(alpha=0.3)+
  facet_wrap(~continent)+
  theme_bw()
```

